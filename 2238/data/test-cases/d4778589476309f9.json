{"uid":"d4778589476309f9","name":"shouldQuerySubscription(String, List) [9] {\"query\": {\"owner.id\": {\"like\": \".*Alph.*\"}}}, [4]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"ef6f015037b34bd35f10f99b13d26250","time":{"start":1732013622075,"stop":1732013632415,"duration":10340},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#9]"},{"name":"host","value":"fv-az585-466"},{"name":"thread","value":"2668@fv-az585-466.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":13,"unknown":0,"total":18},"items":[{"uid":"8040fc761a4d83b6","reportUrl":"https://allegro.github.io/hermes/2236//#testresult/8040fc761a4d83b6","status":"passed","time":{"start":1731948317686,"stop":1731948321724,"duration":4038}},{"uid":"9f8fe19b362169fc","reportUrl":"https://allegro.github.io/hermes/2207//#testresult/9f8fe19b362169fc","status":"passed","time":{"start":1731080433594,"stop":1731080437595,"duration":4001}},{"uid":"21db798d7fa608d3","reportUrl":"https://allegro.github.io/hermes/2201//#testresult/21db798d7fa608d3","status":"passed","time":{"start":1731068959929,"stop":1731068963969,"duration":4040}},{"uid":"a59ac6fdc60e148c","reportUrl":"https://allegro.github.io/hermes/2198//#testresult/a59ac6fdc60e148c","status":"passed","time":{"start":1730979777081,"stop":1730979781072,"duration":3991}},{"uid":"314b197883dd160a","reportUrl":"https://allegro.github.io/hermes/2150//#testresult/314b197883dd160a","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1728894046881,"stop":1728894057220,"duration":10339}},{"uid":"23136083dfee6515","reportUrl":"https://allegro.github.io/hermes/2146//#testresult/23136083dfee6515","status":"passed","time":{"start":1728464698025,"stop":1728464702056,"duration":4031}},{"uid":"8abda15f0dc0a8ac","reportUrl":"https://allegro.github.io/hermes/2144//#testresult/8abda15f0dc0a8ac","status":"passed","time":{"start":1728127158458,"stop":1728127162466,"duration":4008}},{"uid":"4e173680d6c3ee73","reportUrl":"https://allegro.github.io/hermes/2140//#testresult/4e173680d6c3ee73","status":"passed","time":{"start":1728041926285,"stop":1728041930285,"duration":4000}},{"uid":"fbf39abe4d70ad4b","reportUrl":"https://allegro.github.io/hermes/2136//#testresult/fbf39abe4d70ad4b","status":"passed","time":{"start":1728031071484,"stop":1728031075522,"duration":4038}},{"uid":"5de217fee1775b0f","reportUrl":"https://allegro.github.io/hermes/2128//#testresult/5de217fee1775b0f","status":"passed","time":{"start":1727094747718,"stop":1727094751668,"duration":3950}},{"uid":"9030394882a8f11a","reportUrl":"https://allegro.github.io/hermes/2125//#testresult/9030394882a8f11a","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1726731342763,"stop":1726731353070,"duration":10307}},{"uid":"46fb3938fe4f9079","reportUrl":"https://allegro.github.io/hermes/2094//#testresult/46fb3938fe4f9079","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1724941276117,"stop":1724941286399,"duration":10282}},{"uid":"aecc4eae0cfc70f1","reportUrl":"https://allegro.github.io/hermes/2095//#testresult/aecc4eae0cfc70f1","status":"passed","time":{"start":1724941279800,"stop":1724941283801,"duration":4001}},{"uid":"873e910530791781","reportUrl":"https://allegro.github.io/hermes/2093//#testresult/873e910530791781","status":"passed","time":{"start":1724940613998,"stop":1724940618005,"duration":4007}},{"uid":"3742e02e250fbca8","reportUrl":"https://allegro.github.io/hermes/2091//#testresult/3742e02e250fbca8","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1724939035733,"stop":1724939046063,"duration":10330}},{"uid":"ba864403dfaaad95","reportUrl":"https://allegro.github.io/hermes/2092//#testresult/ba864403dfaaad95","status":"passed","time":{"start":1724938706310,"stop":1724938710252,"duration":3942}},{"uid":"f1c428a7572f707","reportUrl":"https://allegro.github.io/hermes/2090//#testresult/f1c428a7572f707","status":"passed","time":{"start":1724856566094,"stop":1724856570111,"duration":4017}}]},"tags":[]},"source":"d4778589476309f9.json","parameterValues":[]}