{"uid":"f2dc69b169e24b2e","name":"shouldPublishAsGuestWhenAuthIsNotRequired(Topic) [2] Topic(TopicBuilderGroup225.TopicBuilderTopic226)","fullName":"pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest.shouldPublishAsGuestWhenAuthIsNotRequired","historyId":"19fb738dce8dbcb92c6b5b781d18881f","time":{"start":1732013242089,"stop":1732013252343,"duration":10254},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest.shouldPublishAsGuestWhenAuthIsNotRequired(TopicAuthorizationTest.java:95)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nCaused by: java.lang.AssertionError: Status expected:<201 CREATED> but was:<404 NOT_FOUND>\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)\n\tat org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:222)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.isCreated(StatusAssertions.java:75)\n\tat pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest.lambda$shouldPublishAsGuestWhenAuthIsNotRequired$1(TopicAuthorizationTest.java:102)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest]/[test-template:shouldPublishAsGuestWhenAuthIsNotRequired(pl.allegro.tech.hermes.api.Topic)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az585-466"},{"name":"thread","value":"2668@fv-az585-466.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest"},{"name":"testMethod","value":"shouldPublishAsGuestWhenAuthIsNotRequired"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":14,"unknown":0,"total":18},"items":[{"uid":"c99c6374edbc0056","reportUrl":"https://allegro.github.io/hermes/2236//#testresult/c99c6374edbc0056","status":"passed","time":{"start":1731948204924,"stop":1731948205277,"duration":353}},{"uid":"6cac34523b6207c1","reportUrl":"https://allegro.github.io/hermes/2207//#testresult/6cac34523b6207c1","status":"passed","time":{"start":1731080330955,"stop":1731080331308,"duration":353}},{"uid":"f8b16443454c0eee","reportUrl":"https://allegro.github.io/hermes/2201//#testresult/f8b16443454c0eee","status":"passed","time":{"start":1731068847576,"stop":1731068847931,"duration":355}},{"uid":"c25268fbb16d435b","reportUrl":"https://allegro.github.io/hermes/2198//#testresult/c25268fbb16d435b","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1730979476662,"stop":1730979486984,"duration":10322}},{"uid":"b07a6718117eabb7","reportUrl":"https://allegro.github.io/hermes/2150//#testresult/b07a6718117eabb7","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1728893658918,"stop":1728893669161,"duration":10243}},{"uid":"ead056a20372f1ab","reportUrl":"https://allegro.github.io/hermes/2146//#testresult/ead056a20372f1ab","status":"passed","time":{"start":1728464595181,"stop":1728464595528,"duration":347}},{"uid":"73a26637a2f05e0","reportUrl":"https://allegro.github.io/hermes/2144//#testresult/73a26637a2f05e0","status":"passed","time":{"start":1728127055829,"stop":1728127056190,"duration":361}},{"uid":"5b715a4994fbbe11","reportUrl":"https://allegro.github.io/hermes/2140//#testresult/5b715a4994fbbe11","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.integrationtests.TopicAuthorizationTest Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1728041614814,"stop":1728041625066,"duration":10252}},{"uid":"d2e8bbe9c991665","reportUrl":"https://allegro.github.io/hermes/2136//#testresult/d2e8bbe9c991665","status":"passed","time":{"start":1728030968732,"stop":1728030969075,"duration":343}},{"uid":"28ca4f07693be44","reportUrl":"https://allegro.github.io/hermes/2128//#testresult/28ca4f07693be44","status":"passed","time":{"start":1727094480075,"stop":1727094480417,"duration":342}},{"uid":"fbb9782c43a479f3","reportUrl":"https://allegro.github.io/hermes/2125//#testresult/fbb9782c43a479f3","status":"passed","time":{"start":1726731063966,"stop":1726731064312,"duration":346}},{"uid":"b9fbc2ee77986938","reportUrl":"https://allegro.github.io/hermes/2094//#testresult/b9fbc2ee77986938","status":"passed","time":{"start":1724941008311,"stop":1724941008653,"duration":342}},{"uid":"8b838b043c28dd80","reportUrl":"https://allegro.github.io/hermes/2095//#testresult/8b838b043c28dd80","status":"passed","time":{"start":1724941167037,"stop":1724941167389,"duration":352}},{"uid":"d5f66a70fa3ab24","reportUrl":"https://allegro.github.io/hermes/2093//#testresult/d5f66a70fa3ab24","status":"passed","time":{"start":1724940501190,"stop":1724940501536,"duration":346}},{"uid":"5e71ad0e8893777","reportUrl":"https://allegro.github.io/hermes/2091//#testresult/5e71ad0e8893777","status":"passed","time":{"start":1724938812995,"stop":1724938813343,"duration":348}},{"uid":"69746ab17a658f7c","reportUrl":"https://allegro.github.io/hermes/2092//#testresult/69746ab17a658f7c","status":"passed","time":{"start":1724938603116,"stop":1724938603468,"duration":352}},{"uid":"79bbca8beeccd237","reportUrl":"https://allegro.github.io/hermes/2090//#testresult/79bbca8beeccd237","status":"passed","time":{"start":1724856463291,"stop":1724856463647,"duration":356}}]},"tags":[]},"source":"f2dc69b169e24b2e.json","parameterValues":[]}