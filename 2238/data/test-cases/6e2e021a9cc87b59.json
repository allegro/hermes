{"uid":"6e2e021a9cc87b59","name":"shouldQuerySubscription(String, List) [1] {\"query\": {}}, [1, 2, 3, 4]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"5bb7eba935e43a26b8976d0f0b8f9a5e","time":{"start":1732013539345,"stop":1732013549683,"duration":10338},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az585-466"},{"name":"thread","value":"2668@fv-az585-466.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":13,"unknown":0,"total":18},"items":[{"uid":"a359ff6a22d49689","reportUrl":"https://allegro.github.io/hermes/2236//#testresult/a359ff6a22d49689","status":"passed","time":{"start":1731948285435,"stop":1731948289608,"duration":4173}},{"uid":"d99974ae193dd8b9","reportUrl":"https://allegro.github.io/hermes/2207//#testresult/d99974ae193dd8b9","status":"passed","time":{"start":1731080401186,"stop":1731080405464,"duration":4278}},{"uid":"812fdeb17c154c7c","reportUrl":"https://allegro.github.io/hermes/2201//#testresult/812fdeb17c154c7c","status":"passed","time":{"start":1731068927561,"stop":1731068931772,"duration":4211}},{"uid":"ca987579c6857b61","reportUrl":"https://allegro.github.io/hermes/2198//#testresult/ca987579c6857b61","status":"passed","time":{"start":1730979745518,"stop":1730979748951,"duration":3433}},{"uid":"3b60c67d369b9b06","reportUrl":"https://allegro.github.io/hermes/2150//#testresult/3b60c67d369b9b06","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1728893964173,"stop":1728893974507,"duration":10334}},{"uid":"32ea1e201c1deeb9","reportUrl":"https://allegro.github.io/hermes/2146//#testresult/32ea1e201c1deeb9","status":"passed","time":{"start":1728464665806,"stop":1728464669882,"duration":4076}},{"uid":"6f6981f5cad9029f","reportUrl":"https://allegro.github.io/hermes/2144//#testresult/6f6981f5cad9029f","status":"passed","time":{"start":1728127126126,"stop":1728127130304,"duration":4178}},{"uid":"233868db9cb3e7c2","reportUrl":"https://allegro.github.io/hermes/2140//#testresult/233868db9cb3e7c2","status":"passed","time":{"start":1728041894012,"stop":1728041898201,"duration":4189}},{"uid":"ba416ab84a0e04c9","reportUrl":"https://allegro.github.io/hermes/2136//#testresult/ba416ab84a0e04c9","status":"passed","time":{"start":1728031039281,"stop":1728031043310,"duration":4029}},{"uid":"98b421dd2fd764f9","reportUrl":"https://allegro.github.io/hermes/2128//#testresult/98b421dd2fd764f9","status":"passed","time":{"start":1727094715683,"stop":1727094719603,"duration":3920}},{"uid":"13d4e39cde5b13e6","reportUrl":"https://allegro.github.io/hermes/2125//#testresult/13d4e39cde5b13e6","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1726731260224,"stop":1726731270535,"duration":10311}},{"uid":"adc5476e246667b1","reportUrl":"https://allegro.github.io/hermes/2094//#testresult/adc5476e246667b1","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1724941193773,"stop":1724941204071,"duration":10298}},{"uid":"b2d78fb4162be84f","reportUrl":"https://allegro.github.io/hermes/2095//#testresult/b2d78fb4162be84f","status":"passed","time":{"start":1724941247373,"stop":1724941251666,"duration":4293}},{"uid":"d15e57effb00ea39","reportUrl":"https://allegro.github.io/hermes/2093//#testresult/d15e57effb00ea39","status":"passed","time":{"start":1724940581688,"stop":1724940585898,"duration":4210}},{"uid":"6302f49743d53177","reportUrl":"https://allegro.github.io/hermes/2091//#testresult/6302f49743d53177","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1724938952997,"stop":1724938963341,"duration":10344}},{"uid":"a4c15f31e1d292b8","reportUrl":"https://allegro.github.io/hermes/2092//#testresult/a4c15f31e1d292b8","status":"passed","time":{"start":1724938674098,"stop":1724938678143,"duration":4045}},{"uid":"4a34444032cc6ce6","reportUrl":"https://allegro.github.io/hermes/2090//#testresult/4a34444032cc6ce6","status":"passed","time":{"start":1724856533777,"stop":1724856537977,"duration":4200}}]},"tags":[]},"source":"6e2e021a9cc87b59.json","parameterValues":[]}