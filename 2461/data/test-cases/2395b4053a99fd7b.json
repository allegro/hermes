{"uid":"2395b4053a99fd7b","name":"shouldQuerySubscription(String, List) [3] {\"query\": {\"name\": {\"like\": \".*cription1\"}}}, [1]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"62c4ae3bcaafe56d9798d17f3ef94c36","time":{"start":1741269735768,"stop":1741269746090,"duration":10322},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#3]"},{"name":"host","value":"fv-az1939-493"},{"name":"thread","value":"2963@fv-az1939-493.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":30,"unknown":0,"total":39},"items":[{"uid":"6f1973b98a2a7ae8","reportUrl":"https://allegro.github.io/hermes/2459//#testresult/6f1973b98a2a7ae8","status":"passed","time":{"start":1741006080219,"stop":1741006084244,"duration":4025}},{"uid":"bb3eb6676de82cf9","reportUrl":"https://allegro.github.io/hermes/2457//#testresult/bb3eb6676de82cf9","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1740656432176,"stop":1740656442452,"duration":10276}},{"uid":"cb059a9e614218be","reportUrl":"https://allegro.github.io/hermes/2452//#testresult/cb059a9e614218be","status":"passed","time":{"start":1739977832803,"stop":1739977836815,"duration":4012}},{"uid":"29cd49b4d0d7f9bb","reportUrl":"https://allegro.github.io/hermes/2444//#testresult/29cd49b4d0d7f9bb","status":"passed","time":{"start":1738761986611,"stop":1738761990619,"duration":4008}},{"uid":"cf9e6d85d15ce48","reportUrl":"https://allegro.github.io/hermes/2428//#testresult/cf9e6d85d15ce48","status":"passed","time":{"start":1738239672837,"stop":1738239676855,"duration":4018}},{"uid":"36878a46b63523d4","reportUrl":"https://allegro.github.io/hermes/2420//#testresult/36878a46b63523d4","status":"passed","time":{"start":1737645161203,"stop":1737645165251,"duration":4048}},{"uid":"230c85923773bb5c","reportUrl":"https://allegro.github.io/hermes/2410//#testresult/230c85923773bb5c","status":"passed","time":{"start":1736507222660,"stop":1736507226674,"duration":4014}},{"uid":"11c746b21dca42be","reportUrl":"https://allegro.github.io/hermes/2407//#testresult/11c746b21dca42be","status":"passed","time":{"start":1736498895793,"stop":1736498899813,"duration":4020}},{"uid":"92a294b29273e4e8","reportUrl":"https://allegro.github.io/hermes/2398//#testresult/92a294b29273e4e8","status":"passed","time":{"start":1736351979158,"stop":1736351983166,"duration":4008}},{"uid":"a203938a339d1e13","reportUrl":"https://allegro.github.io/hermes/2394//#testresult/a203938a339d1e13","status":"passed","time":{"start":1736342912606,"stop":1736342916657,"duration":4051}},{"uid":"120b5ab6aaf7866d","reportUrl":"https://allegro.github.io/hermes/2388//#testresult/120b5ab6aaf7866d","status":"passed","time":{"start":1736329805057,"stop":1736329809040,"duration":3983}},{"uid":"d8421c37788734e3","reportUrl":"https://allegro.github.io/hermes/2375//#testresult/d8421c37788734e3","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1734958646433,"stop":1734958656689,"duration":10256}},{"uid":"679ae0d412fda234","reportUrl":"https://allegro.github.io/hermes/2367//#testresult/679ae0d412fda234","status":"passed","time":{"start":1734700002741,"stop":1734700006756,"duration":4015}},{"uid":"6cb4eee37fbc439f","reportUrl":"https://allegro.github.io/hermes/2363//#testresult/6cb4eee37fbc439f","status":"passed","time":{"start":1734682882236,"stop":1734682886236,"duration":4000}},{"uid":"dfb85b055369bf00","reportUrl":"https://allegro.github.io/hermes/2353//#testresult/dfb85b055369bf00","status":"passed","time":{"start":1734607062712,"stop":1734607066825,"duration":4113}},{"uid":"d173e8079795c5a3","reportUrl":"https://allegro.github.io/hermes/2324//#testresult/d173e8079795c5a3","status":"passed","time":{"start":1732788645080,"stop":1732788649161,"duration":4081}},{"uid":"8d06352bd6ba6335","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/8d06352bd6ba6335","status":"passed","time":{"start":1732533858614,"stop":1732533862586,"duration":3972}},{"uid":"1141b1bc72593f31","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/1141b1bc72593f31","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732179741696,"stop":1732179752047,"duration":10351}},{"uid":"a5528cd4fdbbd98","reportUrl":"https://allegro.github.io/hermes/2270//#testresult/a5528cd4fdbbd98","status":"passed","time":{"start":1732177631034,"stop":1732177635041,"duration":4007}},{"uid":"d420f77762865c86","reportUrl":"https://allegro.github.io/hermes/2238//#testresult/d420f77762865c86","status":"passed","time":{"start":1732119672679,"stop":1732119676780,"duration":4101}}]},"tags":[]},"source":"2395b4053a99fd7b.json","parameterValues":[]}