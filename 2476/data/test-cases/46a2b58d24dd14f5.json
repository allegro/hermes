{"uid":"46a2b58d24dd14f5","name":"shouldQuerySubscription(String, List) [9] {\"query\": {\"owner.id\": {\"like\": \".*Alph.*\"}}}, [4]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"ef6f015037b34bd35f10f99b13d26250","time":{"start":1742302871369,"stop":1742302881717,"duration":10348},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#9]"},{"name":"host","value":"fv-az1951-526"},{"name":"thread","value":"2914@fv-az1951-526.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":31,"unknown":0,"total":41},"items":[{"uid":"11352172b1f737a3","reportUrl":"https://allegro.github.io/hermes/2465//#testresult/11352172b1f737a3","status":"passed","time":{"start":1742206063791,"stop":1742206067815,"duration":4024}},{"uid":"8d43d336b03f3a62","reportUrl":"https://allegro.github.io/hermes/2461//#testresult/8d43d336b03f3a62","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1741269797651,"stop":1741269807958,"duration":10307}},{"uid":"72a302819a051aa1","reportUrl":"https://allegro.github.io/hermes/2459//#testresult/72a302819a051aa1","status":"passed","time":{"start":1741006104310,"stop":1741006108364,"duration":4054}},{"uid":"fc6d2d821bd967c7","reportUrl":"https://allegro.github.io/hermes/2457//#testresult/fc6d2d821bd967c7","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1740656493862,"stop":1740656504135,"duration":10273}},{"uid":"d47568a994b770f0","reportUrl":"https://allegro.github.io/hermes/2452//#testresult/d47568a994b770f0","status":"passed","time":{"start":1739977856892,"stop":1739977860895,"duration":4003}},{"uid":"592a020e0ba4555c","reportUrl":"https://allegro.github.io/hermes/2444//#testresult/592a020e0ba4555c","status":"passed","time":{"start":1738762010694,"stop":1738762014724,"duration":4030}},{"uid":"1e87b96e6b409fb2","reportUrl":"https://allegro.github.io/hermes/2428//#testresult/1e87b96e6b409fb2","status":"passed","time":{"start":1738239696917,"stop":1738239700992,"duration":4075}},{"uid":"4fcaf17b5689eae","reportUrl":"https://allegro.github.io/hermes/2420//#testresult/4fcaf17b5689eae","status":"passed","time":{"start":1737645185400,"stop":1737645189364,"duration":3964}},{"uid":"9b806e38b9ab55cf","reportUrl":"https://allegro.github.io/hermes/2410//#testresult/9b806e38b9ab55cf","status":"passed","time":{"start":1736507246742,"stop":1736507250823,"duration":4081}},{"uid":"13acf08720a8c50d","reportUrl":"https://allegro.github.io/hermes/2407//#testresult/13acf08720a8c50d","status":"passed","time":{"start":1736498919923,"stop":1736498923954,"duration":4031}},{"uid":"215dd0acecf05760","reportUrl":"https://allegro.github.io/hermes/2398//#testresult/215dd0acecf05760","status":"passed","time":{"start":1736352003260,"stop":1736352007275,"duration":4015}},{"uid":"a9229b178186e9b8","reportUrl":"https://allegro.github.io/hermes/2394//#testresult/a9229b178186e9b8","status":"passed","time":{"start":1736342936753,"stop":1736342940788,"duration":4035}},{"uid":"723000e89182e51a","reportUrl":"https://allegro.github.io/hermes/2388//#testresult/723000e89182e51a","status":"passed","time":{"start":1736329829079,"stop":1736329833167,"duration":4088}},{"uid":"bdc56fc7f067605f","reportUrl":"https://allegro.github.io/hermes/2375//#testresult/bdc56fc7f067605f","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1734958708013,"stop":1734958718283,"duration":10270}},{"uid":"e8f4ad6355ee8efa","reportUrl":"https://allegro.github.io/hermes/2367//#testresult/e8f4ad6355ee8efa","status":"passed","time":{"start":1734700026959,"stop":1734700030892,"duration":3933}},{"uid":"6f732caad27324e5","reportUrl":"https://allegro.github.io/hermes/2363//#testresult/6f732caad27324e5","status":"passed","time":{"start":1734682906359,"stop":1734682910370,"duration":4011}},{"uid":"7cc112d25fe493e3","reportUrl":"https://allegro.github.io/hermes/2353//#testresult/7cc112d25fe493e3","status":"passed","time":{"start":1734607086859,"stop":1734607090903,"duration":4044}},{"uid":"80d8cb48d89ce","reportUrl":"https://allegro.github.io/hermes/2324//#testresult/80d8cb48d89ce","status":"passed","time":{"start":1732788669234,"stop":1732788673239,"duration":4005}},{"uid":"fb0aea9ec27967d6","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/fb0aea9ec27967d6","status":"passed","time":{"start":1732533882648,"stop":1732533886686,"duration":4038}},{"uid":"35a0b2fcad36859d","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/35a0b2fcad36859d","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732179803392,"stop":1732179813743,"duration":10351}}]},"tags":[]},"source":"46a2b58d24dd14f5.json","parameterValues":[]}