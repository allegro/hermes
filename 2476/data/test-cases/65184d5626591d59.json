{"uid":"65184d5626591d59","name":"shouldQuerySubscription(String, List) [5] {\"query\": {\"name\": \"subscription1\", \"endpoint\": \"http://endpoint1\"}}, [1]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"78ea0f5cdd7aecfa266d204e0766fe81","time":{"start":1742302829920,"stop":1742302840274,"duration":10354},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#5]"},{"name":"host","value":"fv-az1951-526"},{"name":"thread","value":"2914@fv-az1951-526.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":31,"unknown":0,"total":41},"items":[{"uid":"bac9616d4c98dbfa","reportUrl":"https://allegro.github.io/hermes/2465//#testresult/bac9616d4c98dbfa","status":"passed","time":{"start":1742206047685,"stop":1742206051717,"duration":4032}},{"uid":"d145fef839b0784f","reportUrl":"https://allegro.github.io/hermes/2461//#testresult/d145fef839b0784f","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1741269756392,"stop":1741269766698,"duration":10306}},{"uid":"e4b36a48068874fe","reportUrl":"https://allegro.github.io/hermes/2459//#testresult/e4b36a48068874fe","status":"passed","time":{"start":1741006088280,"stop":1741006092312,"duration":4032}},{"uid":"514c5de9fdcc2931","reportUrl":"https://allegro.github.io/hermes/2457//#testresult/514c5de9fdcc2931","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1740656452722,"stop":1740656463002,"duration":10280}},{"uid":"b9e6eda8da73e9cd","reportUrl":"https://allegro.github.io/hermes/2452//#testresult/b9e6eda8da73e9cd","status":"passed","time":{"start":1739977840833,"stop":1739977844849,"duration":4016}},{"uid":"8dfb7820c7aa37f9","reportUrl":"https://allegro.github.io/hermes/2444//#testresult/8dfb7820c7aa37f9","status":"passed","time":{"start":1738761994626,"stop":1738761998643,"duration":4017}},{"uid":"6b85596194cfc85","reportUrl":"https://allegro.github.io/hermes/2428//#testresult/6b85596194cfc85","status":"passed","time":{"start":1738239680896,"stop":1738239684827,"duration":3931}},{"uid":"b08e7628c816103d","reportUrl":"https://allegro.github.io/hermes/2420//#testresult/b08e7628c816103d","status":"passed","time":{"start":1737645169306,"stop":1737645173247,"duration":3941}},{"uid":"167e8b752f692a13","reportUrl":"https://allegro.github.io/hermes/2410//#testresult/167e8b752f692a13","status":"passed","time":{"start":1736507230645,"stop":1736507234711,"duration":4066}},{"uid":"d85367c9c07d5b1c","reportUrl":"https://allegro.github.io/hermes/2407//#testresult/d85367c9c07d5b1c","status":"passed","time":{"start":1736498903865,"stop":1736498907808,"duration":3943}},{"uid":"5087271e06a6d41e","reportUrl":"https://allegro.github.io/hermes/2398//#testresult/5087271e06a6d41e","status":"passed","time":{"start":1736351987162,"stop":1736351991163,"duration":4001}},{"uid":"141eeed41eaeac1d","reportUrl":"https://allegro.github.io/hermes/2394//#testresult/141eeed41eaeac1d","status":"passed","time":{"start":1736342920706,"stop":1736342924756,"duration":4050}},{"uid":"21909cc94d3bc120","reportUrl":"https://allegro.github.io/hermes/2388//#testresult/21909cc94d3bc120","status":"passed","time":{"start":1736329813004,"stop":1736329817080,"duration":4076}},{"uid":"215119d058368ad7","reportUrl":"https://allegro.github.io/hermes/2375//#testresult/215119d058368ad7","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1734958666952,"stop":1734958677208,"duration":10256}},{"uid":"c1ebda827cc0be0","reportUrl":"https://allegro.github.io/hermes/2367//#testresult/c1ebda827cc0be0","status":"passed","time":{"start":1734700010794,"stop":1734700014808,"duration":4014}},{"uid":"b0b183cd298a6fde","reportUrl":"https://allegro.github.io/hermes/2363//#testresult/b0b183cd298a6fde","status":"passed","time":{"start":1734682890274,"stop":1734682894299,"duration":4025}},{"uid":"b7a6dff63c0af508","reportUrl":"https://allegro.github.io/hermes/2353//#testresult/b7a6dff63c0af508","status":"passed","time":{"start":1734607070858,"stop":1734607074797,"duration":3939}},{"uid":"dc4d901fa4efc489","reportUrl":"https://allegro.github.io/hermes/2324//#testresult/dc4d901fa4efc489","status":"passed","time":{"start":1732788653148,"stop":1732788657143,"duration":3995}},{"uid":"10fd6ab0d1445f7b","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/10fd6ab0d1445f7b","status":"passed","time":{"start":1732533866637,"stop":1732533870673,"duration":4036}},{"uid":"12e08493918a6dd1","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/12e08493918a6dd1","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732179762337,"stop":1732179772592,"duration":10255}}]},"tags":[]},"source":"65184d5626591d59.json","parameterValues":[]}