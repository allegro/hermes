{"uid":"7edb3c3f554ab613","name":"shouldQuerySubscription(String, List) [7] {\"query\": {\"or\": [{\"name\": \"subscription1\"}, {\"endpoint\": \"http://endpoint1\"}]}}, [1, 3]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"47e1f61bd7f0e7426375870da9a7bfea","time":{"start":1734958687481,"stop":1734958697754,"duration":10273},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#7]"},{"name":"host","value":"fv-az711-251"},{"name":"thread","value":"2871@fv-az711-251.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":20,"unknown":0,"total":27},"items":[{"uid":"f7a2b998bdc66b77","reportUrl":"https://allegro.github.io/hermes/2367//#testresult/f7a2b998bdc66b77","status":"passed","time":{"start":1734700018815,"stop":1734700022844,"duration":4029}},{"uid":"5da59eea8f3c4c7f","reportUrl":"https://allegro.github.io/hermes/2363//#testresult/5da59eea8f3c4c7f","status":"passed","time":{"start":1734682898314,"stop":1734682902338,"duration":4024}},{"uid":"e3eacb9b24ccfa54","reportUrl":"https://allegro.github.io/hermes/2353//#testresult/e3eacb9b24ccfa54","status":"passed","time":{"start":1734607078814,"stop":1734607082839,"duration":4025}},{"uid":"965deb8306447dbc","reportUrl":"https://allegro.github.io/hermes/2324//#testresult/965deb8306447dbc","status":"passed","time":{"start":1732788661133,"stop":1732788665242,"duration":4109}},{"uid":"cd2b24c1d10f9bed","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/cd2b24c1d10f9bed","status":"passed","time":{"start":1732533874683,"stop":1732533878704,"duration":4021}},{"uid":"e45c363567f0f8a1","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/e45c363567f0f8a1","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732179782855,"stop":1732179793131,"duration":10276}},{"uid":"b0101e6cff562c33","reportUrl":"https://allegro.github.io/hermes/2270//#testresult/b0101e6cff562c33","status":"passed","time":{"start":1732177647066,"stop":1732177651088,"duration":4022}},{"uid":"65912f1600a96eb2","reportUrl":"https://allegro.github.io/hermes/2238//#testresult/65912f1600a96eb2","status":"passed","time":{"start":1732119688799,"stop":1732119692809,"duration":4010}},{"uid":"d04e7f8d51ad05c9","reportUrl":"https://allegro.github.io/hermes/2238//#testresult/d04e7f8d51ad05c9","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732013601367,"stop":1732013611731,"duration":10364}},{"uid":"f16b883271952346","reportUrl":"https://allegro.github.io/hermes/2236//#testresult/f16b883271952346","status":"passed","time":{"start":1731948309693,"stop":1731948313689,"duration":3996}},{"uid":"d92177cf8da487d7","reportUrl":"https://allegro.github.io/hermes/2207//#testresult/d92177cf8da487d7","status":"passed","time":{"start":1731080425507,"stop":1731080429595,"duration":4088}},{"uid":"a0467ccedff760da","reportUrl":"https://allegro.github.io/hermes/2201//#testresult/a0467ccedff760da","status":"passed","time":{"start":1731068951866,"stop":1731068955904,"duration":4038}},{"uid":"d0abea78b1c89abf","reportUrl":"https://allegro.github.io/hermes/2198//#testresult/d0abea78b1c89abf","status":"passed","time":{"start":1730979769048,"stop":1730979773104,"duration":4056}},{"uid":"4a0869ef3a26d181","reportUrl":"https://allegro.github.io/hermes/2150//#testresult/4a0869ef3a26d181","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1728894026204,"stop":1728894036539,"duration":10335}},{"uid":"963ac0a445581603","reportUrl":"https://allegro.github.io/hermes/2146//#testresult/963ac0a445581603","status":"passed","time":{"start":1728464689978,"stop":1728464694001,"duration":4023}},{"uid":"d5fcbe69ccc04854","reportUrl":"https://allegro.github.io/hermes/2144//#testresult/d5fcbe69ccc04854","status":"passed","time":{"start":1728127150471,"stop":1728127154459,"duration":3988}},{"uid":"22a91bf54c373e6e","reportUrl":"https://allegro.github.io/hermes/2140//#testresult/22a91bf54c373e6e","status":"passed","time":{"start":1728041918275,"stop":1728041922280,"duration":4005}},{"uid":"2f66546b74e72ea8","reportUrl":"https://allegro.github.io/hermes/2136//#testresult/2f66546b74e72ea8","status":"passed","time":{"start":1728031063410,"stop":1728031067444,"duration":4034}},{"uid":"870f6b49d1ef9016","reportUrl":"https://allegro.github.io/hermes/2128//#testresult/870f6b49d1ef9016","status":"passed","time":{"start":1727094739624,"stop":1727094743671,"duration":4047}},{"uid":"91dc969ea638193a","reportUrl":"https://allegro.github.io/hermes/2125//#testresult/91dc969ea638193a","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1726731322152,"stop":1726731332450,"duration":10298}}]},"tags":[]},"source":"7edb3c3f554ab613.json","parameterValues":[]}