{"uid":"f45b8c557e093ffc","name":"shouldQuerySubscription(String, List) [6] {\"query\": {\"and\": [{\"name\": \"subscription1\"}, {\"endpoint\": \"http://endpoint1\"}]}}, [1]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"1f0fba45dbdf5184b8efe8fb8eccae53","time":{"start":1734958677210,"stop":1734958687478,"duration":10268},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#6]"},{"name":"host","value":"fv-az711-251"},{"name":"thread","value":"2871@fv-az711-251.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":20,"unknown":0,"total":27},"items":[{"uid":"b2409a0c43324a86","reportUrl":"https://allegro.github.io/hermes/2367//#testresult/b2409a0c43324a86","status":"passed","time":{"start":1734700014811,"stop":1734700018813,"duration":4002}},{"uid":"3d73bcace4ab2cea","reportUrl":"https://allegro.github.io/hermes/2363//#testresult/3d73bcace4ab2cea","status":"passed","time":{"start":1734682894301,"stop":1734682898312,"duration":4011}},{"uid":"53981dcbcc6738a","reportUrl":"https://allegro.github.io/hermes/2353//#testresult/53981dcbcc6738a","status":"passed","time":{"start":1734607074798,"stop":1734607078812,"duration":4014}},{"uid":"af11f04d94f30ebc","reportUrl":"https://allegro.github.io/hermes/2324//#testresult/af11f04d94f30ebc","status":"passed","time":{"start":1732788657145,"stop":1732788661132,"duration":3987}},{"uid":"bc0939ea2f5be5a0","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/bc0939ea2f5be5a0","status":"passed","time":{"start":1732533870675,"stop":1732533874681,"duration":4006}},{"uid":"ee275a0cb9e1397c","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/ee275a0cb9e1397c","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732179772594,"stop":1732179782853,"duration":10259}},{"uid":"6c584f9689e2773a","reportUrl":"https://allegro.github.io/hermes/2270//#testresult/6c584f9689e2773a","status":"passed","time":{"start":1732177643046,"stop":1732177647060,"duration":4014}},{"uid":"cea68016b0fc1727","reportUrl":"https://allegro.github.io/hermes/2238//#testresult/cea68016b0fc1727","status":"passed","time":{"start":1732119684790,"stop":1732119688797,"duration":4007}},{"uid":"ef37973a0e531c6c","reportUrl":"https://allegro.github.io/hermes/2238//#testresult/ef37973a0e531c6c","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732013591024,"stop":1732013601365,"duration":10341}},{"uid":"bd4b9794f6167b71","reportUrl":"https://allegro.github.io/hermes/2236//#testresult/bd4b9794f6167b71","status":"passed","time":{"start":1731948305703,"stop":1731948309691,"duration":3988}},{"uid":"46eb71672218c4e8","reportUrl":"https://allegro.github.io/hermes/2207//#testresult/46eb71672218c4e8","status":"passed","time":{"start":1731080421528,"stop":1731080425506,"duration":3978}},{"uid":"37027cc1f522c14f","reportUrl":"https://allegro.github.io/hermes/2201//#testresult/37027cc1f522c14f","status":"passed","time":{"start":1731068947835,"stop":1731068951864,"duration":4029}},{"uid":"22171179e7df8ae3","reportUrl":"https://allegro.github.io/hermes/2198//#testresult/22171179e7df8ae3","status":"passed","time":{"start":1730979764985,"stop":1730979769047,"duration":4062}},{"uid":"567ff42ca18f3e40","reportUrl":"https://allegro.github.io/hermes/2150//#testresult/567ff42ca18f3e40","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1728894015867,"stop":1728894026202,"duration":10335}},{"uid":"d97bdec1b251192b","reportUrl":"https://allegro.github.io/hermes/2146//#testresult/d97bdec1b251192b","status":"passed","time":{"start":1728464685972,"stop":1728464689977,"duration":4005}},{"uid":"d8c3a0f745eac844","reportUrl":"https://allegro.github.io/hermes/2144//#testresult/d8c3a0f745eac844","status":"passed","time":{"start":1728127146375,"stop":1728127150469,"duration":4094}},{"uid":"3ee318e4daf96996","reportUrl":"https://allegro.github.io/hermes/2140//#testresult/3ee318e4daf96996","status":"passed","time":{"start":1728041914270,"stop":1728041918273,"duration":4003}},{"uid":"6dc41431974bb23d","reportUrl":"https://allegro.github.io/hermes/2136//#testresult/6dc41431974bb23d","status":"passed","time":{"start":1728031059454,"stop":1728031063408,"duration":3954}},{"uid":"79cea3cd496495f3","reportUrl":"https://allegro.github.io/hermes/2128//#testresult/79cea3cd496495f3","status":"passed","time":{"start":1727094735593,"stop":1727094739622,"duration":4029}},{"uid":"c7601918e0c37a6f","reportUrl":"https://allegro.github.io/hermes/2125//#testresult/c7601918e0c37a6f","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1726731311839,"stop":1726731322150,"duration":10311}}]},"tags":[]},"source":"f45b8c557e093ffc.json","parameterValues":[]}