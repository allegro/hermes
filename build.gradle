buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath group: 'com.bmuschko', name: 'gradle-nexus-plugin', version: '2.3.1'
    }
}

plugins {
    id 'java'
    id 'pl.allegro.tech.build.axion-release' version '1.7.2'
    id 'io.codearte.nexus-staging' version '0.9.0'
}

apply plugin: 'io.codearte.nexus-staging'

scmVersion {
    tag {
        prefix = 'hermes'
    }

    versionCreator 'versionWithBranch'

    hooks {
        pre 'fileUpdate', [
                files      : ['mkdocs.yml', 'hermes-console/package.json'],
                pattern    : { v, p -> /("?version"?): (['"])$v(['"])/ },
                replacement: { v, p -> "\$1: \$2$v\$3" }
        ]
        pre 'commit'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    group = 'pl.allegro.tech.hermes'
    version = scmVersion.version

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    project.ext.versions = [
            kafka             : '2.1.1',
            guava             : '23.0',
            jackson           : '2.9.10',
            jersey            : '2.23.2',
            jetty             : '9.4.19.v20190610',
            curator           : '2.12.0',
            dropwizard_metrics: '4.1.0',
            micrometer_metrics: '1.2.1',
            wiremock          : '2.19.0',
            fongo             : '1.6.1',
            spock             : '1.3-groovy-2.5',
            alpn_api          : '1.1.2.v20150522',
            avro              : '1.9.1',
            json2avro         : '0.2.9',
            okhttp            : '3.9.1',
            undertow          : '2.0.29.Final',
            spring_web        : '5.1.5.RELEASE',
            failsafe          : '2.3.1',
            junit_jupiter     : '5.4.2'
    ]

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile group: 'com.tngtech.java', name: 'junit-dataprovider', version: '1.10.0'
        testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.0.2'
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
        testCompile group: 'org.assertj', name: 'assertj-core', version: '3.1.0'
        testCompile group: 'com.jayway.awaitility', name: 'awaitility', version: '1.6.1'
        testCompile group: 'com.googlecode.catch-exception', name: 'catch-exception', version: '1.2.0'
    }

    test {
        if (project.hasProperty('tests.timeout.multiplier')) {
            jvmArgs = ["-Dtests.timeout.multiplier=${project.property('tests.timeout.multiplier')}"]
        }
    }
}

configure(subprojects - project(':integration')) {
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'jacoco'

    modifyPom {
        project {
            name project.name
            description 'Fast and reliable message broker built on top of Kafka.'
            url 'https://github.com/allegro/hermes'
            inceptionYear '2015'

            scm {
                url 'https://github.com/allegro/hermes'
                connection 'scm:git@github.com:allegro/hermes.git'
                developerConnection 'scm:git@github.com:allegro/hermes.git'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }

            developers {
                developer {
                    id 'skylab'
                    name 'Team Skylab'
                }
            }
        }
    }
}

subprojects {
    configurations {
        all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
        all*.exclude group: "log4j", module: "log4j"
        all*.resolutionStrategy*.force 'org.jboss.logging:jboss-logging:3.2.1.Final'
        all*.resolutionStrategy*.force "com.google.guava:guava:${versions.guava}"
        all*.resolutionStrategy*.force "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
        all*.resolutionStrategy*.force "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
        all*.resolutionStrategy*.force "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${versions.jackson}"
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked,deprecation"
    }

    test {
        reports {
            html.enabled = false
            junitXml.enabled = true
            junitXml.destination = file("$buildDir/test-results/$name")
        }

        testLogging {
            exceptionFormat = 'full'
            events 'passed', 'skipped', 'failed'
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

nexusStaging {
    packageGroup = "pl.allegro"

    delayBetweenRetriesInMillis = 5000
}
