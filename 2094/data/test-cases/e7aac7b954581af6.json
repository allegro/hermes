{"uid":"e7aac7b954581af6","name":"shouldQuerySubscription(String, List) [10] {\"query\": {\"endpoint\": \".*password.*\"}}, []","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"9560c45f9648c4711341a7b7887c0782","time":{"start":1724941286401,"stop":1724941296680,"duration":10279},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:85)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:363)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:92)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#10]"},{"name":"host","value":"fv-az1424-965"},{"name":"thread","value":"2746@fv-az1424-965.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"134eeffea5986d73","reportUrl":"https://allegro.github.io/hermes/2095//#testresult/134eeffea5986d73","status":"passed","time":{"start":1724941283802,"stop":1724941287819,"duration":4017}},{"uid":"d1b4b8ff867a6c72","reportUrl":"https://allegro.github.io/hermes/2093//#testresult/d1b4b8ff867a6c72","status":"passed","time":{"start":1724940618007,"stop":1724940622013,"duration":4006}},{"uid":"d42f7750e2d250e2","reportUrl":"https://allegro.github.io/hermes/2091//#testresult/d42f7750e2d250e2","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1724939046065,"stop":1724939056402,"duration":10337}},{"uid":"fddc773765111a8","reportUrl":"https://allegro.github.io/hermes/2092//#testresult/fddc773765111a8","status":"passed","time":{"start":1724938710254,"stop":1724938714309,"duration":4055}},{"uid":"cfcc52c9b238eca9","reportUrl":"https://allegro.github.io/hermes/2090//#testresult/cfcc52c9b238eca9","status":"passed","time":{"start":1724856570113,"stop":1724856574097,"duration":3984}}]},"tags":[]},"source":"e7aac7b954581af6.json","parameterValues":[]}