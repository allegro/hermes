{"uid":"2e54d731e40fbb02","name":"shouldPassSubscriptionHeadersWhenFilteringIsEnabledForIncomingEvents()","fullName":"pl.allegro.tech.hermes.integrationtests.FilteringJsonTest.shouldPassSubscriptionHeadersWhenFilteringIsEnabledForIncomingEvents","historyId":"4dc0d568fd51657f948284180111dd9a","time":{"start":1730978915197,"stop":1730978926247,"duration":11050},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient.publishUntilSuccess(FrontendTestClient.java:51)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesTestClient.publishUntilSuccess(HermesTestClient.java:208)\n\tat pl.allegro.tech.hermes.integrationtests.FilteringJsonTest.shouldPassSubscriptionHeadersWhenFilteringIsEnabledForIncomingEvents(FilteringJsonTest.java:100)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nCaused by: java.lang.AssertionError: Status expected:<201 CREATED> but was:<404 NOT_FOUND>\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)\n\tat org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:222)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.isCreated(StatusAssertions.java:75)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient.lambda$publishUntilSuccess$1(FrontendTestClient.java:54)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.FilteringJsonTest]/[method:shouldPassSubscriptionHeadersWhenFilteringIsEnabledForIncomingEvents()]"},{"name":"host","value":"fv-az700-429"},{"name":"thread","value":"2741@fv-az700-429.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.FilteringJsonTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.FilteringJsonTest"},{"name":"testMethod","value":"shouldPassSubscriptionHeadersWhenFilteringIsEnabledForIncomingEvents"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.FilteringJsonTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":8,"unknown":0,"total":14},"items":[{"uid":"4569bb076d189389","reportUrl":"https://allegro.github.io/hermes/2150//#testresult/4569bb076d189389","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1728893229086,"stop":1728893240033,"duration":10947}},{"uid":"9403b1be210e85a4","reportUrl":"https://allegro.github.io/hermes/2146//#testresult/9403b1be210e85a4","status":"passed","time":{"start":1728464396540,"stop":1728464397642,"duration":1102}},{"uid":"e4a2d08fe51c7532","reportUrl":"https://allegro.github.io/hermes/2144//#testresult/e4a2d08fe51c7532","status":"passed","time":{"start":1728126870874,"stop":1728126871972,"duration":1098}},{"uid":"2c710041ca610c0e","reportUrl":"https://allegro.github.io/hermes/2140//#testresult/2c710041ca610c0e","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1728040951490,"stop":1728040961822,"duration":10332}},{"uid":"c7cad580766f41ab","reportUrl":"https://allegro.github.io/hermes/2136//#testresult/c7cad580766f41ab","status":"passed","time":{"start":1728030784923,"stop":1728030786035,"duration":1112}},{"uid":"fa5d797d9ba75a9c","reportUrl":"https://allegro.github.io/hermes/2128//#testresult/fa5d797d9ba75a9c","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1727093807861,"stop":1727093818882,"duration":11021}},{"uid":"bf837ab2084618e8","reportUrl":"https://allegro.github.io/hermes/2125//#testresult/bf837ab2084618e8","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1726730654993,"stop":1726730665350,"duration":10357}},{"uid":"f0e936eaea11840","reportUrl":"https://allegro.github.io/hermes/2094//#testresult/f0e936eaea11840","status":"passed","time":{"start":1724940591793,"stop":1724940592928,"duration":1135}},{"uid":"38f9f0b37e523fc4","reportUrl":"https://allegro.github.io/hermes/2095//#testresult/38f9f0b37e523fc4","status":"passed","time":{"start":1724940979886,"stop":1724940980916,"duration":1030}},{"uid":"8518d307cd72147b","reportUrl":"https://allegro.github.io/hermes/2093//#testresult/8518d307cd72147b","status":"passed","time":{"start":1724940316091,"stop":1724940317115,"duration":1024}},{"uid":"b5550fed83756dac","reportUrl":"https://allegro.github.io/hermes/2091//#testresult/b5550fed83756dac","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1724938402633,"stop":1724938413674,"duration":11041}},{"uid":"6f84f9d2ea4be9e6","reportUrl":"https://allegro.github.io/hermes/2092//#testresult/6f84f9d2ea4be9e6","status":"passed","time":{"start":1724938418230,"stop":1724938419269,"duration":1039}},{"uid":"c8553245102a58a4","reportUrl":"https://allegro.github.io/hermes/2090//#testresult/c8553245102a58a4","status":"passed","time":{"start":1724856279082,"stop":1724856280179,"duration":1097}}]},"tags":[]},"source":"2e54d731e40fbb02.json","parameterValues":[]}