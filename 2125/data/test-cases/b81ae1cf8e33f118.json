{"uid":"b81ae1cf8e33f118","name":"shouldPublishAndConsumeJsonMessageAfterMigrationFromJsonToAvro()","fullName":"pl.allegro.tech.hermes.integrationtests.PublishingAvroTest.shouldPublishAndConsumeJsonMessageAfterMigrationFromJsonToAvro","historyId":"6bdb198d7c5fa66319c8fb7d2d380f9c","time":{"start":1726730899415,"stop":1726730910381,"duration":10966},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient.publishUntilSuccess(FrontendTestClient.java:54)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesTestClient.publishUntilSuccess(HermesTestClient.java:170)\n\tat pl.allegro.tech.hermes.integrationtests.PublishingAvroTest.shouldPublishAndConsumeJsonMessageAfterMigrationFromJsonToAvro(PublishingAvroTest.java:487)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nCaused by: java.lang.AssertionError: Status expected:<201 CREATED> but was:<404 NOT_FOUND>\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)\n\tat org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:222)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)\n\tat org.springframework.test.web.reactive.server.StatusAssertions.isCreated(StatusAssertions.java:75)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient.lambda$publishUntilSuccess$1(FrontendTestClient.java:56)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.PublishingAvroTest]/[method:shouldPublishAndConsumeJsonMessageAfterMigrationFromJsonToAvro()]"},{"name":"host","value":"fv-az840-711"},{"name":"thread","value":"2665@fv-az840-711.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.PublishingAvroTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.PublishingAvroTest"},{"name":"testMethod","value":"shouldPublishAndConsumeJsonMessageAfterMigrationFromJsonToAvro"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.PublishingAvroTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":4,"unknown":0,"total":7},"items":[{"uid":"369b767a0248d379","reportUrl":"https://allegro.github.io/hermes/2094//#testresult/369b767a0248d379","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1724940843692,"stop":1724940854631,"duration":10939}},{"uid":"c381bbabca42c2d5","reportUrl":"https://allegro.github.io/hermes/2095//#testresult/c381bbabca42c2d5","status":"passed","time":{"start":1724941124695,"stop":1724941129181,"duration":4486}},{"uid":"caa8a4eb21f9c649","reportUrl":"https://allegro.github.io/hermes/2093//#testresult/caa8a4eb21f9c649","status":"passed","time":{"start":1724940457940,"stop":1724940462807,"duration":4867}},{"uid":"60effeff206278a3","reportUrl":"https://allegro.github.io/hermes/2091//#testresult/60effeff206278a3","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.FrontendTestClient Status expected:<201 CREATED> but was:<404 NOT_FOUND> within 10 seconds.","time":{"start":1724938648619,"stop":1724938659223,"duration":10604}},{"uid":"57f6577b256644e8","reportUrl":"https://allegro.github.io/hermes/2092//#testresult/57f6577b256644e8","status":"passed","time":{"start":1724938560481,"stop":1724938564185,"duration":3704}},{"uid":"9fa62e285f6e976d","reportUrl":"https://allegro.github.io/hermes/2090//#testresult/9fa62e285f6e976d","status":"passed","time":{"start":1724856421085,"stop":1724856424896,"duration":3811}}]},"tags":[]},"source":"b81ae1cf8e33f118.json","parameterValues":[]}