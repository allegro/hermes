{"uid":"d4259279b67e032f","name":"shouldQuerySubscription(String, List) [1] {\"query\": {}}, [1, 2, 3, 4]","fullName":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription","historyId":"5bb7eba935e43a26b8976d0f0b8f9a5e","time":{"start":1740656411600,"stop":1740656421892,"duration":10292},"description":"","status":"broken","statusMessage":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","statusTrace":"org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:1006)\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:790)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.waitUntilSubscriptionIsActive(HermesInitHelper.java:79)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.createSubscription(HermesInitHelper.java:73)\n\tat pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest.shouldQuerySubscription(QueryEndpointTest.java:427)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\nCaused by: org.opentest4j.AssertionFailedError: \nexpected: ACTIVE\n but was: PENDING\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper.lambda$waitUntilSubscriptionIsActive$2(HermesInitHelper.java:89)\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest]/[test-template:shouldQuerySubscription(java.lang.String, java.util.List)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az1934-254"},{"name":"thread","value":"2815@fv-az1934-254.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testClass","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"testMethod","value":"shouldQuerySubscription"},{"name":"suite","value":"pl.allegro.tech.hermes.integrationtests.management.QueryEndpointTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":29,"unknown":0,"total":37},"items":[{"uid":"2fd3d23aa2c65014","reportUrl":"https://allegro.github.io/hermes/2452//#testresult/2fd3d23aa2c65014","status":"passed","time":{"start":1739977824706,"stop":1739977828801,"duration":4095}},{"uid":"b2b63a4d0f74ebd1","reportUrl":"https://allegro.github.io/hermes/2444//#testresult/b2b63a4d0f74ebd1","status":"passed","time":{"start":1738761978611,"stop":1738761982600,"duration":3989}},{"uid":"5c0f779ec9c028e6","reportUrl":"https://allegro.github.io/hermes/2428//#testresult/5c0f779ec9c028e6","status":"passed","time":{"start":1738239664778,"stop":1738239668803,"duration":4025}},{"uid":"1810040369cf1ad7","reportUrl":"https://allegro.github.io/hermes/2420//#testresult/1810040369cf1ad7","status":"passed","time":{"start":1737645153229,"stop":1737645157175,"duration":3946}},{"uid":"ef3b749ea853994","reportUrl":"https://allegro.github.io/hermes/2410//#testresult/ef3b749ea853994","status":"passed","time":{"start":1736507214696,"stop":1736507218597,"duration":3901}},{"uid":"2b80494cc7a257c5","reportUrl":"https://allegro.github.io/hermes/2407//#testresult/2b80494cc7a257c5","status":"passed","time":{"start":1736498887668,"stop":1736498891780,"duration":4112}},{"uid":"f7d6a6571eb9316b","reportUrl":"https://allegro.github.io/hermes/2398//#testresult/f7d6a6571eb9316b","status":"passed","time":{"start":1736351970964,"stop":1736351975158,"duration":4194}},{"uid":"6176e260df9ef72d","reportUrl":"https://allegro.github.io/hermes/2394//#testresult/6176e260df9ef72d","status":"passed","time":{"start":1736342904550,"stop":1736342908587,"duration":4037}},{"uid":"bd3afe7c02db57c8","reportUrl":"https://allegro.github.io/hermes/2388//#testresult/bd3afe7c02db57c8","status":"passed","time":{"start":1736329796601,"stop":1736329800989,"duration":4388}},{"uid":"5ec1f778ec34bed0","reportUrl":"https://allegro.github.io/hermes/2375//#testresult/5ec1f778ec34bed0","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1734958625909,"stop":1734958636164,"duration":10255}},{"uid":"2589d39144b7c644","reportUrl":"https://allegro.github.io/hermes/2367//#testresult/2589d39144b7c644","status":"passed","time":{"start":1734699994842,"stop":1734699998740,"duration":3898}},{"uid":"86401d4f40294585","reportUrl":"https://allegro.github.io/hermes/2363//#testresult/86401d4f40294585","status":"passed","time":{"start":1734682874246,"stop":1734682878248,"duration":4002}},{"uid":"cd7b8227dfbbb0ba","reportUrl":"https://allegro.github.io/hermes/2353//#testresult/cd7b8227dfbbb0ba","status":"passed","time":{"start":1734607054590,"stop":1734607058782,"duration":4192}},{"uid":"59c50f77e78d28d7","reportUrl":"https://allegro.github.io/hermes/2324//#testresult/59c50f77e78d28d7","status":"passed","time":{"start":1732788636919,"stop":1732788641120,"duration":4201}},{"uid":"ac7cbaae148063d8","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/ac7cbaae148063d8","status":"passed","time":{"start":1732533850571,"stop":1732533854595,"duration":4024}},{"uid":"90df04f59ea50b94","reportUrl":"https://allegro.github.io/hermes/2272//#testresult/90df04f59ea50b94","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732179721000,"stop":1732179731352,"duration":10352}},{"uid":"a1597cff4483307e","reportUrl":"https://allegro.github.io/hermes/2270//#testresult/a1597cff4483307e","status":"passed","time":{"start":1732177622908,"stop":1732177627028,"duration":4120}},{"uid":"53c2e19530b31b69","reportUrl":"https://allegro.github.io/hermes/2238//#testresult/53c2e19530b31b69","status":"passed","time":{"start":1732119664594,"stop":1732119668678,"duration":4084}},{"uid":"6e2e021a9cc87b59","reportUrl":"https://allegro.github.io/hermes/2238//#testresult/6e2e021a9cc87b59","status":"broken","statusDetails":"Assertion condition defined as a Lambda expression in pl.allegro.tech.hermes.test.helper.client.integration.HermesInitHelper \nexpected: ACTIVE\n but was: PENDING within 10 seconds.","time":{"start":1732013539345,"stop":1732013549683,"duration":10338}},{"uid":"a359ff6a22d49689","reportUrl":"https://allegro.github.io/hermes/2236//#testresult/a359ff6a22d49689","status":"passed","time":{"start":1731948285435,"stop":1731948289608,"duration":4173}}]},"tags":[]},"source":"d4259279b67e032f.json","parameterValues":[]}